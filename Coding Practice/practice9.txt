Script started on 2021-04-15 10:46:02-07:00 [TERM="xterm" TTY="/dev/pts/2" COLUMNS="118" LINES="47"]
laurenceg@costello ~/cs1400/codingPractice $ pwd
/user/laurenceg/cs1400/codingPractice
laurenceg@costello ~/cs1400/codingPractice $ ls -l
total 395
-rw------- 1 laurenceg cpp  1221 Apr  8 19:51 BinarySearch.class
-rw------- 1 laurenceg cpp  1004 Apr  8 18:31 BinarySearch.java
-rw------- 1 laurenceg cpp  1354 Apr  8 19:46 BoyNames.txt
-rw------- 1 laurenceg cpp   927 Mar 11 14:54 Car.class
-rw------- 1 laurenceg cpp   750 Mar  9 22:07 Car.java
-rw------- 1 laurenceg cpp  1173 Mar 11 14:54 CarTest.class
-rw------- 1 laurenceg cpp   622 Mar  9 22:02 CarTest.java
-rw------- 1 laurenceg cpp   989 Mar 18 11:13 CarpetCalculator.class
-rw------- 1 laurenceg cpp   740 Mar 16 21:25 CarpetCalculator.java
-rw------- 1 laurenceg cpp  1124 Feb 25 14:42 Exam.class
-rw------- 1 laurenceg cpp   796 Feb 24 12:26 Exam.java
-rw------- 1 laurenceg cpp   777 Feb 18 12:23 FormattedOutput.class
-rw------- 1 laurenceg cpp   548 Feb 17 10:50 FormattedOutput.java
-rw------- 1 laurenceg cpp  3399 Mar  4 13:33 Geometry.class
-rw-r--r-- 1 laurenceg cpp  5445 Mar  3 13:44 Geometry.java
-rw------- 1 laurenceg cpp  1445 Apr  8 19:46 GirlNames.txt
-rw------- 1 laurenceg cpp   859 Feb 25 14:44 HollowSquare.class
-rw------- 1 laurenceg cpp   929 Feb 24 13:27 HollowSquare.java
-rw------- 1 laurenceg cpp   835 Mar 18 11:05 HotDogStand.class
-rw------- 1 laurenceg cpp   535 Mar 18 11:05 HotDogStand.java
-rw------- 1 laurenceg cpp  1391 Mar 18 11:12 HotDogStandTest.class
-rw------- 1 laurenceg cpp  1342 Mar 18 11:04 HotDogStandTest.java
-rw------- 1 laurenceg cpp  1216 Feb  9 17:23 KeyboardInput.class
-rw------- 1 laurenceg cpp   875 Feb  9 15:18 KeyboardInput.java
-rw------- 1 laurenceg cpp  2074 Apr  8 19:48 Lottery.class
-rw------- 1 laurenceg cpp  2033 Apr  8 18:30 Lottery.java
-rw------- 1 laurenceg cpp  1112 Feb  9 17:24 NameAndInitials.class
-rw------- 1 laurenceg cpp   737 Feb  9 15:46 NameAndInitials.java
-rw------- 1 laurenceg cpp  2051 Apr  8 19:49 NameSearch.class
-rw------- 1 laurenceg cpp  1951 Apr  8 18:30 NameSearch.java
-rw------- 1 laurenceg cpp   640 Feb 25 14:43 Pattern.class
-rw------- 1 laurenceg cpp   288 Feb 24 12:44 Pattern.java
-rw------- 1 laurenceg cpp  1003 Feb  1 21:45 Pay.class
-rw-r--r-- 1 laurenceg cpp   980 Feb  1 21:32 Pay.java
-rw------- 1 laurenceg cpp   617 Apr 15 10:43 PhoneBookEntry.java
-rw------- 1 laurenceg cpp  2602 Apr 15 10:43 PhoneBookTest.java
-rw------- 1 laurenceg cpp   902 Mar  4 13:34 PrimeChecker.class
-rw------- 1 laurenceg cpp   772 Mar  3 14:29 PrimeChecker.java
-rw------- 1 laurenceg cpp   762 Mar 16 21:26 RoomCarpet.class
-rw------- 1 laurenceg cpp   463 Mar 16 21:26 RoomCarpet.java
-rw------- 1 laurenceg cpp   738 Mar 16 20:58 RoomDimension.class
-rw------- 1 laurenceg cpp   490 Mar 16 20:58 RoomDimension.java
-rw------- 1 laurenceg cpp   655 Mar 11 14:55 SavingsAccount.class
-rw------- 1 laurenceg cpp   716 Mar 10 12:44 SavingsAccount.java
-rw------- 1 laurenceg cpp  1828 Mar 11 14:55 SavingsAccountTest.class
-rw------- 1 laurenceg cpp  1566 Mar 10 13:39 SavingsAccountTest.java
-rw------- 1 laurenceg cpp  1509 Apr  8 19:50 SelectionSort.class
-rw------- 1 laurenceg cpp  1635 Apr  8 19:15 SelectionSort.java
-rw------- 1 laurenceg cpp  1419 Feb 25 14:45 SeparateEvenOddNumbers.class
-rw------- 1 laurenceg cpp  1109 Feb 25 14:39 SeparateEvenOddNumbers.java
-rw------- 1 laurenceg cpp  1098 Feb 18 12:23 StringComparison.class
-rw------- 1 laurenceg cpp  1416 Feb 17 11:13 StringComparison.java
-rw------- 1 laurenceg cpp  1269 Mar  4 13:35 StringComparisonWithWildCard.class
-rw------- 1 laurenceg cpp  1318 Mar  4 13:30 StringComparisonWithWildCard.java
-rw------- 1 laurenceg cpp  1656 Apr 15 10:42 TwoDArray.java
-rw------- 1 laurenceg cpp  1033 Apr 15 10:43 TwoDArrayTest.java
-rw------- 1 laurenceg cpp  1202 Feb  9 17:24 VendingMachine.class
-rw------- 1 laurenceg cpp   919 Feb  9 17:18 VendingMachine.java
-rw------- 1 laurenceg cpp     8 Feb 25 14:45 data.even
-rw------- 1 laurenceg cpp     5 Feb 25 14:45 data.odd
-rw------- 1 laurenceg cpp   194 Apr  8 19:50 data.out
-rw------- 1 laurenceg cpp    75 Apr  8 19:47 data.txt
-rw-r--r-- 1 laurenceg cpp 46774 Mar 10 12:40 hs_err_pid123548.log
-rw-r--r-- 1 laurenceg cpp 46663 Mar 11 14:54 hs_err_pid13225.log
-rw-r--r-- 1 laurenceg cpp 46901 Apr  8 19:49 hs_err_pid23979.log
-rw-r--r-- 1 laurenceg cpp 45531 Mar 10 13:32 hs_err_pid5719.log
-rw------- 1 laurenceg cpp  2635 Feb  1 21:46 practice1.txt
-rw------- 1 laurenceg cpp  6955 Feb  9 17:25 practice2.txt
-rw------- 1 laurenceg cpp  7361 Feb 18 12:25 practice3.txt
-rw------- 1 laurenceg cpp  9080 Feb 25 14:46 practice4.txt
-rw------- 1 laurenceg cpp 16851 Mar  4 13:36 practice5.txt
-rw------- 1 laurenceg cpp 10972 Mar 11 14:56 practice6.txt
-rw------- 1 laurenceg cpp 10624 Mar 18 11:14 practice7.txt
-rw------- 1 laurenceg cpp 18126 Apr  8 19:51 practice8.txt
-rw------- 1 laurenceg cpp     0 Apr 15 10:46 practice9.txt
-rw-r--r-- 1 laurenceg cpp     0 Mar 10 12:40 replay_pid123548.log
-rw-r--r-- 1 laurenceg cpp     0 Mar 11 14:54 replay_pid13225.log
-rw-r--r-- 1 laurenceg cpp     0 Apr  8 19:49 replay_pid23979.log
-rw-r--r-- 1 laurenceg cpp     0 Mar 10 13:32 replay_pid5719.log
-rw------- 1 laurenceg cpp  1284 Feb 18 12:24 roots.class
-rw------- 1 laurenceg cpp  1095 Feb 18 12:17 roots.java
laurenceg@costello ~/cs1400/codingPractice $ cat TwoDArray.java
public class TwoDArray
{
   public static int getTotal(int[][] a)
   {
      int totalCounter = 0;
      for(int row = 0; row < a.length; row++)
      {
         for(int col = 0; col < a[row].length; col++)
         {
            totalCounter += a[row][col];
         }
      }
      return totalCounter;
   }

   public static double getAverage(int[][] a)
   {
      double average = 0;
      double counter = 0;
      for(int row = 0; row < a.length; row++)
      {
         for(int col = 0; col < a[row].length; col++)
         {
            average += a[row][col];
            counter++;
         }
      }
      average = average / counter;
      return average;
   }

   public static int getRowTotal(int[][] a, int row)
   {
      int rowTotal = 0;

      for(int i = 0; i < a[row].length; i++)
      {
         rowTotal += a[row][i];
      }
      return rowTotal;
   }

   public static int getColumnTotal(int[][] a, int col)
   {
      int colTotal = 0;

      for(int i = 0; i < a[0].length - 1; i++)
      {
         colTotal += a[i][col];
      }
      return colTotal;
   }

   public static int getHighestInRow(int[][] a, int row)
   {
      int highestRow = a[row][0];
      for(int i = 0; i < a[row].length; i++)
      {
         if(highestRow < a[row][i])
         {
            highestRow = a[row][i];
         }
      }
      return highestRow;
   }

   public static int getLowestInColumn(int[][] a, int col)
   {
      int lowestCol = a[0][col];
      for(int i = 0; i < a[0].length - 1; i++)
      {
         if(lowestCol > a[i][col])
         {
            lowestCol = a[i][col];
         }
      }
      return lowestCol;
   }
}

laurenceg@costello ~/cs1400/codingPractice $ cat TwoDArrayTest.java
public class TwoDArrayTest
{
   public static void main(String[] args)
   {
      int[][] array = {{2, 1, 9},
                      {7, 3, 4}};

      System.out.println("Processing the int array.");
      System.out.printf("Total: %d\n", TwoDArray.getTotal(array));
      System.out.println("Average: " + TwoDArray.getAverage(array));
      System.out.printf("Total of row 0: %d\n", TwoDArray.getRowTotal(array, 0));
      System.out.printf("Total of row 1: %d\n", TwoDArray.getRowTotal(array, 1));
      System.out.printf("Total of col 0: %d\n", TwoDArray.getColumnTotal(array, 0));
      System.out.printf("Total of col 2: %d\n", TwoDArray.getColumnTotal(array, 2));
      System.out.printf("Highest in row 0: %d\n", TwoDArray.getHighestInRow(array, 0));
      System.out.printf("Highest in row 1: %d\n", TwoDArray.getHighestInRow(array, 1));
      System.out.printf("Lowest in col 0: %d\n", TwoDArray.getLowestInColumn(array, 0));
      System.out.printf("Lowest in col 1: %d\n", TwoDArray.getLowestInColumn(array, 1));
   }
}

laurenceg@costello ~/cs1400/codingPractice $ javac TwoDArrayTest.java
laurenceg@costello ~/cs1400/codingPractice $ java TwoDArrayTest
Processing the int array.
Total: 26
Average: 4.333333333333333
Total of row 0: 12
Total of row 1: 14
Total of col 0: 9
Total of col 2: 13
Highest in row 0: 9
Highest in row 1: 7
Lowest in col 0: 2
Lowest in col 1: 1
laurenceg@costello ~/cs1400/codingPractice $ cat PhoneBookEntry.java
public class PhoneBookEntry
{
   private String phoneName;
   private String phoneNumber;

   public PhoneBookEntry(String name, String number)
   {
      phoneName = name;
      phoneNumber = number;
   }

   public void setName(String name)
   {
      phoneName = name;
   }
   public void setNumber(String number)
   {
      phoneNumber = number;
   }

   public String phoneName()
   {
      return phoneName;
   }
   public String phoneNumber()
   {
      return phoneNumber;
   }

   public String toString()
   {
      String str = String.format("(%s, %s)", phoneName, phoneNumber);
      return str;
   }
}

laurenceg@costello ~/cs1400/codingPractice $ cat PhoneBookTest.java
import java.util.ArrayList;
import java.util.Scanner;
public class PhoneBookTest
{
   public static void main(String[] args)
   {
      Scanner kb = new Scanner(System.in);
      ArrayList<String> phoneList = new ArrayList<String>();
      String phoneName;
      String phoneNumber;

      System.out.println("I'm going to ask you to enter 5 names and phone numbers");
      System.out.print("Enter a person's name: ");
      phoneName = kb.nextLine();
      System.out.print("Enter that person's phone number: ");
      phoneNumber = kb.next();
      PhoneBookEntry person1 = new PhoneBookEntry(phoneName, phoneNumber);
      phoneList.add(person1.toString());
      kb.nextLine();

      System.out.print("Enter a person's name: ");
      phoneName = kb.nextLine();
      System.out.print("Enter that person's phone number: ");
      phoneNumber = kb.next();
      PhoneBookEntry person2 = new PhoneBookEntry(phoneName, phoneNumber);
      phoneList.add(person2.toString());
      kb.nextLine();

      System.out.print("Enter a person's name: ");
      phoneName = kb.nextLine();
      System.out.print("Enter that person's phone number: ");
      phoneNumber = kb.next();
      PhoneBookEntry person3 = new PhoneBookEntry(phoneName, phoneNumber);
      phoneList.add(person3.toString());
      kb.nextLine();

      System.out.print("Enter a person's name: ");
      phoneName = kb.nextLine();
      System.out.print("Enter that person's phone number: ");
      phoneNumber = kb.next();
      PhoneBookEntry person4 = new PhoneBookEntry(phoneName, phoneNumber);
      phoneList.add(person4.toString());
      kb.nextLine();

      System.out.print("Enter a person's name: ");
      phoneName = kb.nextLine();
      System.out.print("Enter that person's phone number: ");
      phoneNumber = kb.next();
      PhoneBookEntry person5 = new PhoneBookEntry(phoneName, phoneNumber);
      phoneList.add(person5.toString());
      kb.nextLine();
      System.out.println();

      System.out.println("Here's the data you entered: ");
      for(int i = 0; i < phoneList.size(); i++)
      {
         System.out.println(phoneList.get(i));
      }
      System.out.println();

      System.out.println("Insert my name to the beginning of the phone book:");
      PhoneBookEntry myInfo = new PhoneBookEntry("L Garcia", "310-7225");
      phoneList.add(0, myInfo.toString());
      System.out.println(phoneList.toString());
      System.out.println();

      System.out.println("Remove the last entry: ");
      phoneList.remove(phoneList.size() - 1);
      System.out.println(phoneList.toString());
   }
}

laurenceg@costello ~/cs1400/codingPractice $ javac PhoneBookTest.java
laurenceg@costello ~/cs1400/codingPractice $ java PhoneBookTest
I'm going to ask you to enter 5 names and phone numbers
Enter a person's name: A Amamra
Enter that person's phone number: 869-3447
Enter a person's name: T Chen
Enter that person's phone number: 869-4842
Enter a person's name: M Husain
Enter that person's phone number: 869-2022
Enter a person's name: H Ji
Enter that person's phone number: 869-5521
Enter a person's name: A Raheja
Enter that person's phone number: 869-4412

Here's the data you entered:
(A Amamra, 869-3447)
(T Chen, 869-4842)
(M Husain, 869-2022)
(H Ji, 869-5521)
(A Raheja, 869-4412)

Insert my name to the beginning of the phone book:
[(L Garcia, 310-7225), (A Amamra, 869-3447), (T Chen, 869-4842), (M Husain, 869-2022), (H Ji, 869-5521), (A Raheja, 869-4412)]

Remove the last entry:
[(L Garcia, 310-7225), (A Amamra, 869-3447), (T Chen, 869-4842), (M Husain, 869-2022), (H Ji, 869-5521)]
laurenceg@costello ~/cs1400/codingPractice $ exit
exit

Script done on 2021-04-15 10:48:28-07:00 [COMMAND_EXIT_CODE="0"]
