Script started on 2021-04-29 16:48:31-07:00 [TERM="xterm" TTY="/dev/pts/7" COLUMNS="131" LINES="44"]
laurenceg@costello ~/cs1400/codingPractice $ pwd
/user/laurenceg/cs1400/codingPractice
laurenceg@costello ~/cs1400/codingPractice $ ls -l
total 518
-rw------- 1 laurenceg cpp  1221 Apr  8 19:51 BinarySearch.class
-rw------- 1 laurenceg cpp  1004 Apr  8 18:31 BinarySearch.java
-rw------- 1 laurenceg cpp  1354 Apr  8 19:46 BoyNames.txt
-rw------- 1 laurenceg cpp   927 Mar 11 14:54 Car.class
-rw------- 1 laurenceg cpp   750 Mar  9 22:07 Car.java
-rw------- 1 laurenceg cpp  1173 Mar 11 14:54 CarTest.class
-rw------- 1 laurenceg cpp   622 Mar  9 22:02 CarTest.java
-rw------- 1 laurenceg cpp   989 Mar 18 11:13 CarpetCalculator.class
-rw------- 1 laurenceg cpp   740 Mar 16 21:25 CarpetCalculator.java
-rw------- 1 laurenceg cpp   413 Apr 29 15:46 Document.class
-rw------- 1 laurenceg cpp   223 Apr 29 15:44 Document.java
-rw------- 1 laurenceg cpp  1756 Apr 29 15:46 DocumentTest.class
-rw------- 1 laurenceg cpp  1163 Apr 29 15:44 DocumentTest.java
-rw------- 1 laurenceg cpp  1174 Apr 29 15:46 Email.class
-rw------- 1 laurenceg cpp  1043 Apr 29 15:44 Email.java
-rw------- 1 laurenceg cpp  1124 Feb 25 14:42 Exam.class
-rw------- 1 laurenceg cpp   796 Feb 24 12:26 Exam.java
-rw------- 1 laurenceg cpp   756 Apr 29 15:46 File.class
-rw------- 1 laurenceg cpp   545 Apr 29 15:45 File.java
drwx--s--x 2 laurenceg cpp     7 Apr 29 16:47 FileIO
-rw------- 1 laurenceg cpp   626 Apr 29 15:42 FileIO.class
-rw------- 1 laurenceg cpp  1348 Apr 29 15:42 FileIOSubClass.class
-rw------- 1 laurenceg cpp  1721 Apr 29 15:42 FileIOTest.class
-rw------- 1 laurenceg cpp   777 Feb 18 12:23 FormattedOutput.class
-rw------- 1 laurenceg cpp   548 Feb 17 10:50 FormattedOutput.java
-rw------- 1 laurenceg cpp  3399 Mar  4 13:33 Geometry.class
-rw-r--r-- 1 laurenceg cpp  5445 Mar  3 13:44 Geometry.java
-rw------- 1 laurenceg cpp  1445 Apr  8 19:46 GirlNames.txt
-rw------- 1 laurenceg cpp   859 Feb 25 14:44 HollowSquare.class
-rw------- 1 laurenceg cpp   929 Feb 24 13:27 HollowSquare.java
-rw------- 1 laurenceg cpp   835 Mar 18 11:05 HotDogStand.class
-rw------- 1 laurenceg cpp   535 Mar 18 11:05 HotDogStand.java
-rw------- 1 laurenceg cpp  1391 Mar 18 11:12 HotDogStandTest.class
-rw------- 1 laurenceg cpp  1342 Mar 18 11:04 HotDogStandTest.java
-rw------- 1 laurenceg cpp  1216 Feb  9 17:23 KeyboardInput.class
-rw------- 1 laurenceg cpp   875 Feb  9 15:18 KeyboardInput.java
-rw------- 1 laurenceg cpp  2074 Apr  8 19:48 Lottery.class
-rw------- 1 laurenceg cpp  2033 Apr  8 18:30 Lottery.java
-rw------- 1 laurenceg cpp  1112 Feb  9 17:24 NameAndInitials.class
-rw------- 1 laurenceg cpp   737 Feb  9 15:46 NameAndInitials.java
-rw------- 1 laurenceg cpp  2051 Apr  8 19:49 NameSearch.class
-rw------- 1 laurenceg cpp  1951 Apr  8 18:30 NameSearch.java
-rw------- 1 laurenceg cpp   832 Apr 22 18:46 PasswordTest.class
-rw------- 1 laurenceg cpp   453 Apr 22 18:44 PasswordTest.java
-rw------- 1 laurenceg cpp  1139 Apr 22 18:46 PasswordVerifier.class
-rw------- 1 laurenceg cpp  1281 Apr 22 18:43 PasswordVerifier.java
-rw------- 1 laurenceg cpp   640 Feb 25 14:43 Pattern.class
-rw------- 1 laurenceg cpp   288 Feb 24 12:44 Pattern.java
-rw------- 1 laurenceg cpp  1003 Feb  1 21:45 Pay.class
-rw-r--r-- 1 laurenceg cpp   980 Feb  1 21:32 Pay.java
-rw------- 1 laurenceg cpp   794 Apr 15 10:47 PhoneBookEntry.class
-rw------- 1 laurenceg cpp   617 Apr 15 10:43 PhoneBookEntry.java
-rw------- 1 laurenceg cpp  1911 Apr 15 10:47 PhoneBookTest.class
-rw------- 1 laurenceg cpp  2602 Apr 15 10:43 PhoneBookTest.java
-rw------- 1 laurenceg cpp   902 Mar  4 13:34 PrimeChecker.class
-rw------- 1 laurenceg cpp   772 Mar  3 14:29 PrimeChecker.java
-rw------- 1 laurenceg cpp   762 Mar 16 21:26 RoomCarpet.class
-rw------- 1 laurenceg cpp   463 Mar 16 21:26 RoomCarpet.java
-rw------- 1 laurenceg cpp   738 Mar 16 20:58 RoomDimension.class
-rw------- 1 laurenceg cpp   490 Mar 16 20:58 RoomDimension.java
-rw------- 1 laurenceg cpp   655 Mar 11 14:55 SavingsAccount.class
-rw------- 1 laurenceg cpp   716 Mar 10 12:44 SavingsAccount.java
-rw------- 1 laurenceg cpp  1828 Mar 11 14:55 SavingsAccountTest.class
-rw------- 1 laurenceg cpp  1566 Mar 10 13:39 SavingsAccountTest.java
-rw------- 1 laurenceg cpp  1509 Apr  8 19:50 SelectionSort.class
-rw------- 1 laurenceg cpp  1635 Apr  8 19:15 SelectionSort.java
-rw------- 1 laurenceg cpp  1419 Feb 25 14:45 SeparateEvenOddNumbers.class
-rw------- 1 laurenceg cpp  1109 Feb 25 14:39 SeparateEvenOddNumbers.java
-rw------- 1 laurenceg cpp  1098 Feb 18 12:23 StringComparison.class
-rw------- 1 laurenceg cpp  1416 Feb 17 11:13 StringComparison.java
-rw------- 1 laurenceg cpp  1269 Mar  4 13:35 StringComparisonWithWildCard.class
-rw------- 1 laurenceg cpp  1318 Mar  4 13:30 StringComparisonWithWildCard.java
-rw------- 1 laurenceg cpp  1042 Apr 15 10:46 TwoDArray.class
-rw------- 1 laurenceg cpp  1656 Apr 15 10:42 TwoDArray.java
-rw------- 1 laurenceg cpp  1552 Apr 15 10:46 TwoDArrayTest.class
-rw------- 1 laurenceg cpp  1033 Apr 15 10:43 TwoDArrayTest.java
-rw------- 1 laurenceg cpp  1202 Feb  9 17:24 VendingMachine.class
-rw------- 1 laurenceg cpp   919 Feb  9 17:18 VendingMachine.java
-rw------- 1 laurenceg cpp  1296 Apr 22 18:44 WordReplacement.class
-rw------- 1 laurenceg cpp  1095 Apr 22 18:43 WordReplacement.java
-rw------- 1 laurenceg cpp  1594 Apr 22 18:45 WordReplacementWithMethod.class
-rw------- 1 laurenceg cpp  1431 Apr 22 18:43 WordReplacementWithMethod.java
-rw------- 1 laurenceg cpp     8 Feb 25 14:45 data.even
-rw------- 1 laurenceg cpp     5 Feb 25 14:45 data.odd
-rw------- 1 laurenceg cpp   194 Apr  8 19:50 data.out
-rw------- 1 laurenceg cpp    75 Apr  8 19:47 data.txt
-rw-r--r-- 1 laurenceg cpp 46774 Mar 10 12:40 hs_err_pid123548.log
-rw-r--r-- 1 laurenceg cpp 46663 Mar 11 14:54 hs_err_pid13225.log
-rw-r--r-- 1 laurenceg cpp 46901 Apr  8 19:49 hs_err_pid23979.log
-rw-r--r-- 1 laurenceg cpp 47611 Apr 29 15:46 hs_err_pid54692.log
-rw-r--r-- 1 laurenceg cpp 45531 Mar 10 13:32 hs_err_pid5719.log
-rw------- 1 laurenceg cpp  2635 Feb  1 21:46 practice1.txt
-rw------- 1 laurenceg cpp 15628 Apr 22 18:47 practice10.txt
-rw------- 1 laurenceg cpp     0 Apr 29 16:48 practice11.txt
-rw------- 1 laurenceg cpp  6955 Feb  9 17:25 practice2.txt
-rw------- 1 laurenceg cpp  7361 Feb 18 12:25 practice3.txt
-rw------- 1 laurenceg cpp  9080 Feb 25 14:46 practice4.txt
-rw------- 1 laurenceg cpp 16851 Mar  4 13:36 practice5.txt
-rw------- 1 laurenceg cpp 10972 Mar 11 14:56 practice6.txt
-rw------- 1 laurenceg cpp 10624 Mar 18 11:14 practice7.txt
-rw------- 1 laurenceg cpp 18126 Apr  8 19:51 practice8.txt
-rw------- 1 laurenceg cpp 14405 Apr 15 10:48 practice9.txt
-rw-r--r-- 1 laurenceg cpp     0 Mar 10 12:40 replay_pid123548.log
-rw-r--r-- 1 laurenceg cpp     0 Mar 11 14:54 replay_pid13225.log
-rw-r--r-- 1 laurenceg cpp     0 Apr  8 19:49 replay_pid23979.log
-rw-r--r-- 1 laurenceg cpp     0 Apr 29 15:46 replay_pid54692.log
-rw-r--r-- 1 laurenceg cpp     0 Mar 10 13:32 replay_pid5719.log
-rw------- 1 laurenceg cpp  1284 Feb 18 12:24 roots.class
-rw------- 1 laurenceg cpp  1095 Feb 18 12:17 roots.java
laurenceg@costello ~/cs1400/codingPractice $ cat Document.java
public class Document
{
   private String text;
   public Document()
   {
      text = "";
   }
   public Document(String text)
   {
      this.text = text;
   }
   public String toString()
   {
      return text;
   }
}

laurenceg@costello ~/cs1400/codingPractice $ cat Email.java
public class Email extends Document
{
   private String sender;
   private String recipient;
   private String title;
   public Email()
   {
      super();
      sender = "";
      recipient = "";
      title = "";
   }
   public Email (String body, String sender, String recipient, String title)
   {
      super(body);
      this.sender = sender;
      this.recipient = recipient;
      this.title = title;
   }

   public String getSender()
   {
      return sender;
   }
   public void setSender(String sender)
   {
      this.sender = sender;
   }
   public String getRecipient()
   {
      return recipient;
   }
   public void setRecipient(String recipient)
   {
      this.recipient = recipient;
   }
   public String getTitle()
   {
      return title;
   }
   public void setTitle(String title)
   {
      this.title = title;
   }

   public String toString()
   {
      return "Sender: " + sender
             + "\nRecipient: " + recipient
             + "\nTitle: " + title
             + "\nContent: " + super.toString();
   }
}

laurenceg@costello ~/cs1400/codingPractice $ cat File.java
import javax.xml.parsers.DocumentBuilder;

public class File extends Document
{
   private String pathname;
   public File()
   {
      super();
      pathname = "";
   }
   public File(String body, String pathname)
   {
      super(body);
      this.pathname = pathname;
   }
   public void setPathname(String s)
   {
      pathname = s;
   }
   public String getPathname()
   {
      return pathname;
   }
   @Override
   public String toString()
   {
      return "Pathname: " + pathname
             + "\nBody: " + super.toString();
   }
}

laurenceg@costello ~/cs1400/codingPractice $ cat DocumentTest.java
public class DocumentTest
{
   public static void main(String[] args)
   {
      Email email1= new Email("Body about programming in Java", "Larry", "David", "Programming");
      Email email2 = new Email("Body about running marathons", "Mary", "Emily", "races");
      File file1 = new File("Contents about some Java file", "/user/file.txt");
      File file2 = new File("Contents about marathon races", "run.txt");
      System.out.println("Email1 --\n" + email1);
      System.out.println("Email2 --\n" + email2);
      System.out.println("File1 --\n" + file1);
      System.out.println("File2 --\n" + file2);
      System.out.println("Which contains Java?");
      if (ContainsKeyword(email1,"Java"))
      System.out.println(" Email1");
      if (ContainsKeyword(email2,"Java"))
      System.out.println(" Email2");
      if (ContainsKeyword(file1,"Java"))
      System.out.println(" File1");
      if (ContainsKeyword(file2,"Java"))
      System.out.println(" File2");
   }
   public static boolean ContainsKeyword(Document docObject, String keyword)
   {
      if (docObject.toString().indexOf(keyword) >= 0)
      return true;
      return false;
   }
}

laurenceg@costello ~/cs1400/codingPractice $ javac DocumentTest.java
laurenceg@costello ~/cs1400/codingPractice $ java DocumentTest
Email1 --
Sender: Larry
Recipient: David
Title: Programming
Content: Body about programming in Java
Email2 --
Sender: Mary
Recipient: Emily
Title: races
Content: Body about running marathons
File1 --
Pathname: /user/file.txt
Body: Contents about some Java file
File2 --
Pathname: run.txt
Body: Contents about marathon races
Which contains Java?
 Email1
 File1
laurenceg@costello ~/cs1400/codingPractice $ cd FileIO
laurenceg@costello ~/cs1400/codingPractice/FileIO $ pwd
/user/laurenceg/cs1400/codingPractice/FileIO
laurenceg@costello ~/cs1400/codingPractice/FileIO $ ls -l
total 7
-rw------- 1 laurenceg cpp  313 Apr 29 16:46 FileIO.java
-rw------- 1 laurenceg cpp 1142 Apr 29 16:47 FileIOSubClass.java
-rw------- 1 laurenceg cpp 1272 Apr 29 16:47 FileIOTest.java
-rw------- 1 laurenceg cpp   31 Apr 29 16:47 grade1.txt
-rw------- 1 laurenceg cpp   12 Apr 29 16:47 grade3.txt
laurenceg@costello ~/cs1400/codingPractice/FileIO $ cat FileIO.java
import java.io.*;
public class FileIO
{
   public void fileRead(String s) throws IOException
   {
      System.out.println("fileRead in the base class reached");
   }

   public void fileWrite(String s, String[] a) throws IOException
   {
      System.out.println("fileWrite in the base class reached");
   }
}

laurenceg@costello ~/cs1400/codingPractice/FileIO $ cat FileIOSubClass.java
import java.io.*;
import java.util.Scanner;

public class FileIOSubClass extends FileIO
{
   @Override
   public void fileRead(String s) throws IOException
   {
      File myFile = new File(s);
      if(!myFile.exists())
      {
         System.out.printf("Error: input file %s does not exist\n", s);
         System.exit(0);
      }
      Scanner inputFile = new Scanner(myFile);
      while (inputFile.hasNext())
      {
         System.out.println(inputFile.nextLine());
      }
      inputFile.close();
   }

   @Override
   public void fileWrite(String s, String[] a) throws IOException
   {
      PrintWriter outputFile = new PrintWriter(s);
      for (int i = 0; i < a.length; i++)
      {
         outputFile.println(a[i]);
      }
      outputFile.close();
   }

   public void fileRead(File file) throws IOException
   {
      if(!file.exists())
      {
         System.out.print("Error: input file name not found\n");
         System.exit(0);
      }
      Scanner inputFile = new Scanner(file);
      while (inputFile.hasNext())
      {
         System.out.println(inputFile.nextLine());
      }
      inputFile.close();
   }
}

laurenceg@costello ~/cs1400/codingPractice/FileIO $ cat FileIOTest.java
import java.util.Scanner;
import java.io.*;
public class FileIOTest
{
   public static void main(String[] args) throws IOException
   {
      FileIO obj = new FileIOSubClass();
      Scanner kb = new Scanner(System.in);

      int size;
      String inFile;
      String inFile2;
      String[] array;

      System.out.print("Please enter an input file name: ");
      inFile = kb.nextLine();
      System.out.println("Test fileRead(String) --");
      obj.fileRead(inFile);

      System.out.print("please enter an output file name: ");
      String outFile = kb.nextLine();
      System.out.print("enter how many lines you have to print to the output file: ");
      size = kb.nextInt();
      kb.nextLine();
      array = new String[size];
      for (int i = 0; i < size; i++)
      {
         System.out.print("enter line " + (i + 1) + ": ");
         array[i] = kb.nextLine();
      }
      System.out.println("Test fileWrite -- ");
      obj.fileWrite(outFile, array);
      System.out.println("check output file: " + outFile);

      System.out.print("enter another input filename: ");
      inFile2 = kb.nextLine();
      File myFile = new File(inFile2);
      System.out.println("Test fileRead(File) -- ");
      ((FileIOSubClass)obj).fileRead(myFile);
   }
}

laurenceg@costello ~/cs1400/codingPractice/FileIO $ javac FileIOTest.java
laurenceg@costello ~/cs1400/codingPractice/FileIO $ java FileIOTest
Please enter an input file name: grade.txt
Test fileRead(String) --
Error: input file grade.txt does not exist
laurenceg@costello ~/cs1400/codingPractice/FileIO $ java FileIOTest
Please enter an input file name: grade1.txt
Test fileRead(String) --
10
30
50
70
90
100
80
60
40
20
please enter an output file name: out.out
enter how many lines you have to print to the output file: 3
enter line 1: CS1400 Coding Practice #11
enter line 2: Task #2
enter line 3: overloading vs. overriding demo
Test fileWrite --
check output file: out.out
enter another input filename: grade3.txt
Test fileRead(File) --
100
100
100
laurenceg@costello ~/cs1400/codingPractice/FileIO $ exit
exit

Script done on 2021-04-29 16:51:08-07:00 [COMMAND_EXIT_CODE="0"]
